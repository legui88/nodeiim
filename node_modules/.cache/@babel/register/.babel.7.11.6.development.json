{
  "{\"sourceRoot\":\"C:\\\\Users\\\\corps\\\\iimgit\\\\nodeiim\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\corps\\\\iimgit\\\\nodeiim\",\"filename\":\"C:\\\\Users\\\\corps\\\\iimgit\\\\nodeiim\\\\md-seed-config.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\corps\\\\iimgit\\\\nodeiim\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\corps\\iimgit\\nodeiim\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\corps\\iimgit\\nodeiim",
      "filename": "C:\\Users\\corps\\iimgit\\nodeiim\\md-seed-config.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\corps\\iimgit\\nodeiim",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\corps\\iimgit\\nodeiim\\md-seed-config.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\corps\\iimgit\\nodeiim\\md-seed-config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\corps\\iimgit\\nodeiim\\",
        "sourceFileName": "md-seed-config.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require('mongoose');\n\nconst PostSeeder = require('./src/db/seed/posts.seeder');\n\nconst mongoURL = 'mongodb://localhost/blog';\n/**\n * Seeders List\n * order is important\n * @type {Object}\n */\n\nconst seedersList = {\n  PostSeeder\n};\n/**\n * Connect to mongodb implementation\n * @return {Promise}\n */\n\nconst connect = async () => await mongoose.connect(mongoURL, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n/**\n * Drop/Clear the database implementation\n * @return {Promise}\n */\n\n\nconst dropdb = async () => mongoose.connection.db.dropDatabase();\n\nmodule.exports = {\n  seedersList,\n  connect,\n  dropdb\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1kLXNlZWQtY29uZmlnLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlBvc3RTZWVkZXIiLCJtb25nb1VSTCIsInNlZWRlcnNMaXN0IiwiY29ubmVjdCIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsImRyb3BkYiIsImNvbm5lY3Rpb24iLCJkYiIsImRyb3BEYXRhYmFzZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHRCxPQUFPLENBQUMsNEJBQUQsQ0FBMUI7O0FBRUEsTUFBTUUsUUFBUSxHQUFHLDBCQUFqQjtBQUVBOzs7Ozs7QUFLQSxNQUFNQyxXQUFXLEdBQUc7QUFDaEJGLEVBQUFBO0FBRGdCLENBQXBCO0FBR0E7Ozs7O0FBSUEsTUFBTUcsT0FBTyxHQUFHLFlBQ2QsTUFBTUwsUUFBUSxDQUFDSyxPQUFULENBQWlCRixRQUFqQixFQUEyQjtBQUM3QkcsRUFBQUEsZUFBZSxFQUFFLElBRFk7QUFFN0JDLEVBQUFBLGtCQUFrQixFQUFFO0FBRlMsQ0FBM0IsQ0FEUjtBQUtBOzs7Ozs7QUFJQSxNQUFNQyxNQUFNLEdBQUcsWUFBWVIsUUFBUSxDQUFDUyxVQUFULENBQW9CQyxFQUFwQixDQUF1QkMsWUFBdkIsRUFBM0I7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiVCxFQUFBQSxXQURhO0FBRWJDLEVBQUFBLE9BRmE7QUFHYkcsRUFBQUE7QUFIYSxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGNvcnBzXFxpaW1naXRcXG5vZGVpaW1cXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcbmNvbnN0IFBvc3RTZWVkZXIgPSByZXF1aXJlKCcuL3NyYy9kYi9zZWVkL3Bvc3RzLnNlZWRlcicpO1xuXG5jb25zdCBtb25nb1VSTCA9ICdtb25nb2RiOi8vbG9jYWxob3N0L2Jsb2cnO1xuXG4vKipcbiAqIFNlZWRlcnMgTGlzdFxuICogb3JkZXIgaXMgaW1wb3J0YW50XG4gKiBAdHlwZSB7T2JqZWN0fVxuICovXG5jb25zdCBzZWVkZXJzTGlzdCA9IHtcbiAgICBQb3N0U2VlZGVyLFxufTtcbi8qKlxuICogQ29ubmVjdCB0byBtb25nb2RiIGltcGxlbWVudGF0aW9uXG4gKiBAcmV0dXJuIHtQcm9taXNlfVxuICovXG5jb25zdCBjb25uZWN0ID0gYXN5bmMgKCkgPT5cbiAgYXdhaXQgbW9uZ29vc2UuY29ubmVjdChtb25nb1VSTCwge1xuICAgICAgdXNlTmV3VXJsUGFyc2VyOiB0cnVlLFxuICAgICAgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlXG59KTtcbi8qKlxuICogRHJvcC9DbGVhciB0aGUgZGF0YWJhc2UgaW1wbGVtZW50YXRpb25cbiAqIEByZXR1cm4ge1Byb21pc2V9XG4gKi9cbmNvbnN0IGRyb3BkYiA9IGFzeW5jICgpID0+IG1vbmdvb3NlLmNvbm5lY3Rpb24uZGIuZHJvcERhdGFiYXNlKCk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIHNlZWRlcnNMaXN0LFxuICAgIGNvbm5lY3QsXG4gICAgZHJvcGRiXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "md-seed-config.js"
      ],
      "names": [
        "mongoose",
        "require",
        "PostSeeder",
        "mongoURL",
        "seedersList",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "dropdb",
        "connection",
        "db",
        "dropDatabase",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,4BAAD,CAA1B;;AAEA,MAAME,QAAQ,GAAG,0BAAjB;AAEA;;;;;;AAKA,MAAMC,WAAW,GAAG;AAChBF,EAAAA;AADgB,CAApB;AAGA;;;;;AAIA,MAAMG,OAAO,GAAG,YACd,MAAML,QAAQ,CAACK,OAAT,CAAiBF,QAAjB,EAA2B;AAC7BG,EAAAA,eAAe,EAAE,IADY;AAE7BC,EAAAA,kBAAkB,EAAE;AAFS,CAA3B,CADR;AAKA;;;;;;AAIA,MAAMC,MAAM,GAAG,YAAYR,QAAQ,CAACS,UAAT,CAAoBC,EAApB,CAAuBC,YAAvB,EAA3B;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACbT,EAAAA,WADa;AAEbC,EAAAA,OAFa;AAGbG,EAAAA;AAHa,CAAjB",
      "sourceRoot": "C:\\Users\\corps\\iimgit\\nodeiim\\",
      "sourcesContent": [
        "const mongoose = require('mongoose');\nconst PostSeeder = require('./src/db/seed/posts.seeder');\n\nconst mongoURL = 'mongodb://localhost/blog';\n\n/**\n * Seeders List\n * order is important\n * @type {Object}\n */\nconst seedersList = {\n    PostSeeder,\n};\n/**\n * Connect to mongodb implementation\n * @return {Promise}\n */\nconst connect = async () =>\n  await mongoose.connect(mongoURL, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true\n});\n/**\n * Drop/Clear the database implementation\n * @return {Promise}\n */\nconst dropdb = async () => mongoose.connection.db.dropDatabase();\n\nmodule.exports = {\n    seedersList,\n    connect,\n    dropdb\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1601450367612
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\corps\\\\iimgit\\\\nodeiim\\\\src\\\\db\\\\seed\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\corps\\\\iimgit\\\\nodeiim\",\"filename\":\"C:\\\\Users\\\\corps\\\\iimgit\\\\nodeiim\\\\src\\\\db\\\\seed\\\\posts.seeder.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\corps\\\\iimgit\\\\nodeiim\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\corps\\iimgit\\nodeiim\\src\\db\\seed\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\corps\\iimgit\\nodeiim",
      "filename": "C:\\Users\\corps\\iimgit\\nodeiim\\src\\db\\seed\\posts.seeder.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\corps\\iimgit\\nodeiim",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\corps\\iimgit\\nodeiim\\src\\db\\seed\\posts.seeder.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\corps\\iimgit\\nodeiim\\src\\db\\seed\\posts.seeder.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\corps\\iimgit\\nodeiim\\src\\db\\seed\\",
        "sourceFileName": "posts.seeder.js"
      }
    },
    "ast": null,
    "code": "const {\n  Seeder\n} = require('mongoose-data-seed');\n\nconst faker = require('faker');\n\nconst slug = require('slug');\n\nconst Post = require('../models/postModel');\n\nconst data = [];\nlet title;\n\nfor (let i = 0; i < 10; i++) {\n  title = faker.lorem.words(3);\n  data.push({\n    title,\n    slug: slug(title),\n    description: faker.lorem.sentence(),\n    image: faker.image.imageUrl(),\n    body: faker.lorem.paragraphs(10, \"\\n\")\n  });\n}\n\nclass PostsSeeder extends Seeder {\n  async shouldRun() {\n    return Post.countDocuments().exec().then(count => count === 0);\n  }\n\n  async run() {\n    return Post.create(data);\n  }\n\n}\n\nmodule.exports = PostsSeeder;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3RzLnNlZWRlci5qcyJdLCJuYW1lcyI6WyJTZWVkZXIiLCJyZXF1aXJlIiwiZmFrZXIiLCJzbHVnIiwiUG9zdCIsImRhdGEiLCJ0aXRsZSIsImkiLCJsb3JlbSIsIndvcmRzIiwicHVzaCIsImRlc2NyaXB0aW9uIiwic2VudGVuY2UiLCJpbWFnZSIsImltYWdlVXJsIiwiYm9keSIsInBhcmFncmFwaHMiLCJQb3N0c1NlZWRlciIsInNob3VsZFJ1biIsImNvdW50RG9jdW1lbnRzIiwiZXhlYyIsInRoZW4iLCJjb3VudCIsInJ1biIsImNyZWF0ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFhQyxPQUFPLENBQUMsb0JBQUQsQ0FBMUI7O0FBQ0EsTUFBTUMsS0FBSyxHQUFHRCxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNRSxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU1HLElBQUksR0FBR0gsT0FBTyxDQUFDLHFCQUFELENBQXBCOztBQUVBLE1BQU1JLElBQUksR0FBRyxFQUFiO0FBQ0EsSUFBSUMsS0FBSjs7QUFFQSxLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUcsRUFBcEIsRUFBd0JBLENBQUMsRUFBekIsRUFBNkI7QUFDM0JELEVBQUFBLEtBQUssR0FBR0osS0FBSyxDQUFDTSxLQUFOLENBQVlDLEtBQVosQ0FBa0IsQ0FBbEIsQ0FBUjtBQUVBSixFQUFBQSxJQUFJLENBQUNLLElBQUwsQ0FBVTtBQUNSSixJQUFBQSxLQURRO0FBRVJILElBQUFBLElBQUksRUFBRUEsSUFBSSxDQUFDRyxLQUFELENBRkY7QUFHUkssSUFBQUEsV0FBVyxFQUFFVCxLQUFLLENBQUNNLEtBQU4sQ0FBWUksUUFBWixFQUhMO0FBSVJDLElBQUFBLEtBQUssRUFBRVgsS0FBSyxDQUFDVyxLQUFOLENBQVlDLFFBQVosRUFKQztBQUtSQyxJQUFBQSxJQUFJLEVBQUViLEtBQUssQ0FBQ00sS0FBTixDQUFZUSxVQUFaLENBQXVCLEVBQXZCLEVBQTJCLElBQTNCO0FBTEUsR0FBVjtBQU9EOztBQUVELE1BQU1DLFdBQU4sU0FBMEJqQixNQUExQixDQUFpQztBQUUvQixRQUFNa0IsU0FBTixHQUFrQjtBQUNoQixXQUFPZCxJQUFJLENBQUNlLGNBQUwsR0FBc0JDLElBQXRCLEdBQTZCQyxJQUE3QixDQUFrQ0MsS0FBSyxJQUFJQSxLQUFLLEtBQUssQ0FBckQsQ0FBUDtBQUNEOztBQUVELFFBQU1DLEdBQU4sR0FBWTtBQUNWLFdBQU9uQixJQUFJLENBQUNvQixNQUFMLENBQVluQixJQUFaLENBQVA7QUFDRDs7QUFSOEI7O0FBV2pDb0IsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxXQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGNvcnBzXFxpaW1naXRcXG5vZGVpaW1cXHNyY1xcZGJcXHNlZWRcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgU2VlZGVyIH0gPSByZXF1aXJlKCdtb25nb29zZS1kYXRhLXNlZWQnKTtcbmNvbnN0IGZha2VyID0gcmVxdWlyZSgnZmFrZXInKTtcbmNvbnN0IHNsdWcgPSByZXF1aXJlKCdzbHVnJyk7XG5jb25zdCBQb3N0ID0gcmVxdWlyZSgnLi4vbW9kZWxzL3Bvc3RNb2RlbCcpO1xuXG5jb25zdCBkYXRhID0gW107XG5sZXQgdGl0bGU7XG5cbmZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykge1xuICB0aXRsZSA9IGZha2VyLmxvcmVtLndvcmRzKDMpXG5cbiAgZGF0YS5wdXNoKHtcbiAgICB0aXRsZSxcbiAgICBzbHVnOiBzbHVnKHRpdGxlKSxcbiAgICBkZXNjcmlwdGlvbjogZmFrZXIubG9yZW0uc2VudGVuY2UoKSxcbiAgICBpbWFnZTogZmFrZXIuaW1hZ2UuaW1hZ2VVcmwoKSxcbiAgICBib2R5OiBmYWtlci5sb3JlbS5wYXJhZ3JhcGhzKDEwLCBcIlxcblwiKVxuICB9KVxufVxuXG5jbGFzcyBQb3N0c1NlZWRlciBleHRlbmRzIFNlZWRlciB7XG5cbiAgYXN5bmMgc2hvdWxkUnVuKCkge1xuICAgIHJldHVybiBQb3N0LmNvdW50RG9jdW1lbnRzKCkuZXhlYygpLnRoZW4oY291bnQgPT4gY291bnQgPT09IDApO1xuICB9XG5cbiAgYXN5bmMgcnVuKCkge1xuICAgIHJldHVybiBQb3N0LmNyZWF0ZShkYXRhKTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IFBvc3RzU2VlZGVyO1xuXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "posts.seeder.js"
      ],
      "names": [
        "Seeder",
        "require",
        "faker",
        "slug",
        "Post",
        "data",
        "title",
        "i",
        "lorem",
        "words",
        "push",
        "description",
        "sentence",
        "image",
        "imageUrl",
        "body",
        "paragraphs",
        "PostsSeeder",
        "shouldRun",
        "countDocuments",
        "exec",
        "then",
        "count",
        "run",
        "create",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,oBAAD,CAA1B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,qBAAD,CAApB;;AAEA,MAAMI,IAAI,GAAG,EAAb;AACA,IAAIC,KAAJ;;AAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,EAAAA,KAAK,GAAGJ,KAAK,CAACM,KAAN,CAAYC,KAAZ,CAAkB,CAAlB,CAAR;AAEAJ,EAAAA,IAAI,CAACK,IAAL,CAAU;AACRJ,IAAAA,KADQ;AAERH,IAAAA,IAAI,EAAEA,IAAI,CAACG,KAAD,CAFF;AAGRK,IAAAA,WAAW,EAAET,KAAK,CAACM,KAAN,CAAYI,QAAZ,EAHL;AAIRC,IAAAA,KAAK,EAAEX,KAAK,CAACW,KAAN,CAAYC,QAAZ,EAJC;AAKRC,IAAAA,IAAI,EAAEb,KAAK,CAACM,KAAN,CAAYQ,UAAZ,CAAuB,EAAvB,EAA2B,IAA3B;AALE,GAAV;AAOD;;AAED,MAAMC,WAAN,SAA0BjB,MAA1B,CAAiC;AAE/B,QAAMkB,SAAN,GAAkB;AAChB,WAAOd,IAAI,CAACe,cAAL,GAAsBC,IAAtB,GAA6BC,IAA7B,CAAkCC,KAAK,IAAIA,KAAK,KAAK,CAArD,CAAP;AACD;;AAED,QAAMC,GAAN,GAAY;AACV,WAAOnB,IAAI,CAACoB,MAAL,CAAYnB,IAAZ,CAAP;AACD;;AAR8B;;AAWjCoB,MAAM,CAACC,OAAP,GAAiBT,WAAjB",
      "sourceRoot": "C:\\Users\\corps\\iimgit\\nodeiim\\src\\db\\seed\\",
      "sourcesContent": [
        "const { Seeder } = require('mongoose-data-seed');\nconst faker = require('faker');\nconst slug = require('slug');\nconst Post = require('../models/postModel');\n\nconst data = [];\nlet title;\n\nfor (let i = 0; i < 10; i++) {\n  title = faker.lorem.words(3)\n\n  data.push({\n    title,\n    slug: slug(title),\n    description: faker.lorem.sentence(),\n    image: faker.image.imageUrl(),\n    body: faker.lorem.paragraphs(10, \"\\n\")\n  })\n}\n\nclass PostsSeeder extends Seeder {\n\n  async shouldRun() {\n    return Post.countDocuments().exec().then(count => count === 0);\n  }\n\n  async run() {\n    return Post.create(data);\n  }\n}\n\nmodule.exports = PostsSeeder;\n\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1601449789862
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\corps\\\\iimgit\\\\nodeiim\\\\src\\\\db\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\corps\\\\iimgit\\\\nodeiim\",\"filename\":\"C:\\\\Users\\\\corps\\\\iimgit\\\\nodeiim\\\\src\\\\db\\\\models\\\\postModel.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\corps\\\\iimgit\\\\nodeiim\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\corps\\iimgit\\nodeiim\\src\\db\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\corps\\iimgit\\nodeiim",
      "filename": "C:\\Users\\corps\\iimgit\\nodeiim\\src\\db\\models\\postModel.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\corps\\iimgit\\nodeiim",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\corps\\iimgit\\nodeiim\\src\\db\\models\\postModel.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\corps\\iimgit\\nodeiim\\src\\db\\models\\postModel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\corps\\iimgit\\nodeiim\\src\\db\\models\\",
        "sourceFileName": "postModel.js"
      }
    },
    "ast": null,
    "code": "const {\n  model\n} = require('mongoose');\n\nconst PostSchema = require('../migrations/postSchema');\n\nconst Post = model('Post', PostSchema);\nmodule.exports = Post;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3RNb2RlbC5qcyJdLCJuYW1lcyI6WyJtb2RlbCIsInJlcXVpcmUiLCJQb3N0U2NoZW1hIiwiUG9zdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFZQyxPQUFPLENBQUUsVUFBRixDQUF6Qjs7QUFDQSxNQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBRSwwQkFBRixDQUExQjs7QUFFQSxNQUFNRSxJQUFJLEdBQUdILEtBQUssQ0FBQyxNQUFELEVBQVFFLFVBQVIsQ0FBbEI7QUFFQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCRixJQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGNvcnBzXFxpaW1naXRcXG5vZGVpaW1cXHNyY1xcZGJcXG1vZGVsc1xcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBtb2RlbCB9ID0gcmVxdWlyZSAoJ21vbmdvb3NlJyk7XHJcbmNvbnN0IFBvc3RTY2hlbWEgPSByZXF1aXJlICgnLi4vbWlncmF0aW9ucy9wb3N0U2NoZW1hJyk7XHJcblxyXG5jb25zdCBQb3N0ID0gbW9kZWwoJ1Bvc3QnLFBvc3RTY2hlbWEpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBQb3N0OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "postModel.js"
      ],
      "names": [
        "model",
        "require",
        "PostSchema",
        "Post",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAYC,OAAO,CAAE,UAAF,CAAzB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAE,0BAAF,CAA1B;;AAEA,MAAME,IAAI,GAAGH,KAAK,CAAC,MAAD,EAAQE,UAAR,CAAlB;AAEAE,MAAM,CAACC,OAAP,GAAiBF,IAAjB",
      "sourceRoot": "C:\\Users\\corps\\iimgit\\nodeiim\\src\\db\\models\\",
      "sourcesContent": [
        "const { model } = require ('mongoose');\r\nconst PostSchema = require ('../migrations/postSchema');\r\n\r\nconst Post = model('Post',PostSchema);\r\n\r\nmodule.exports = Post;"
      ]
    },
    "sourceType": "module",
    "mtime": 1601451504678
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\corps\\\\iimgit\\\\nodeiim\\\\src\\\\db\\\\migrations\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\corps\\\\iimgit\\\\nodeiim\",\"filename\":\"C:\\\\Users\\\\corps\\\\iimgit\\\\nodeiim\\\\src\\\\db\\\\migrations\\\\postSchema.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\corps\\\\iimgit\\\\nodeiim\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\corps\\iimgit\\nodeiim\\src\\db\\migrations\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\corps\\iimgit\\nodeiim",
      "filename": "C:\\Users\\corps\\iimgit\\nodeiim\\src\\db\\migrations\\postSchema.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\corps\\iimgit\\nodeiim",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\corps\\iimgit\\nodeiim\\src\\db\\migrations\\postSchema.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\corps\\iimgit\\nodeiim\\src\\db\\migrations\\postSchema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\corps\\iimgit\\nodeiim\\src\\db\\migrations\\",
        "sourceFileName": "postSchema.js"
      }
    },
    "ast": null,
    "code": "const {\n  Schema\n} = require('mongoose');\n\nconst PostSchema = new Schema({\n  title: {\n    type: String,\n    unique: true\n  },\n  slug: {\n    type: String,\n    unique: true\n  },\n  description: String,\n  image: String,\n  body: String,\n  published: {\n    type: Boolean,\n    default: true\n  }\n});\nmodule.export = PostSchema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3RTY2hlbWEuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwicmVxdWlyZSIsIlBvc3RTY2hlbWEiLCJ0aXRsZSIsInR5cGUiLCJTdHJpbmciLCJ1bmlxdWUiLCJzbHVnIiwiZGVzY3JpcHRpb24iLCJpbWFnZSIsImJvZHkiLCJwdWJsaXNoZWQiLCJCb29sZWFuIiwiZGVmYXVsdCIsIm1vZHVsZSIsImV4cG9ydCJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQWFDLE9BQU8sQ0FBRSxVQUFGLENBQTFCOztBQUVBLE1BQU1DLFVBQVUsR0FBRyxJQUFJRixNQUFKLENBQVc7QUFFMUJHLEVBQUFBLEtBQUssRUFBQztBQUVGQyxJQUFBQSxJQUFJLEVBQUVDLE1BRko7QUFHRkMsSUFBQUEsTUFBTSxFQUFFO0FBSE4sR0FGb0I7QUFTMUJDLEVBQUFBLElBQUksRUFBQztBQUVESCxJQUFBQSxJQUFJLEVBQUVDLE1BRkw7QUFHREMsSUFBQUEsTUFBTSxFQUFFO0FBSFAsR0FUcUI7QUFnQjFCRSxFQUFBQSxXQUFXLEVBQUVILE1BaEJhO0FBaUIxQkksRUFBQUEsS0FBSyxFQUFFSixNQWpCbUI7QUFrQjFCSyxFQUFBQSxJQUFJLEVBQUVMLE1BbEJvQjtBQW1CMUJNLEVBQUFBLFNBQVMsRUFBRTtBQUNQUCxJQUFBQSxJQUFJLEVBQUVRLE9BREM7QUFFUEMsSUFBQUEsT0FBTyxFQUFFO0FBRkY7QUFuQmUsQ0FBWCxDQUFuQjtBQTJCQUMsTUFBTSxDQUFDQyxNQUFQLEdBQWdCYixVQUFoQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXGNvcnBzXFxpaW1naXRcXG5vZGVpaW1cXHNyY1xcZGJcXG1pZ3JhdGlvbnNcXCIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgU2NoZW1hIH0gPSByZXF1aXJlICgnbW9uZ29vc2UnKTtcclxuXHJcbmNvbnN0IFBvc3RTY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuXHJcbiAgICB0aXRsZTp7XHJcblxyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICB1bmlxdWU6IHRydWUsXHJcblxyXG4gICAgfSAsXHJcblxyXG4gICAgc2x1Zzp7XHJcblxyXG4gICAgICAgIHR5cGU6IFN0cmluZyxcclxuICAgICAgICB1bmlxdWU6IHRydWUsXHJcblxyXG4gICAgfSAsXHJcbiAgICBcclxuICAgIGRlc2NyaXB0aW9uOiBTdHJpbmcsXHJcbiAgICBpbWFnZTogU3RyaW5nLFxyXG4gICAgYm9keTogU3RyaW5nLFxyXG4gICAgcHVibGlzaGVkOiB7XHJcbiAgICAgICAgdHlwZTogQm9vbGVhbixcclxuICAgICAgICBkZWZhdWx0OiB0cnVlLFxyXG4gICAgfVxyXG5cclxuXHJcbn0pXHJcblxyXG5tb2R1bGUuZXhwb3J0ID0gUG9zdFNjaGVtYTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "postSchema.js"
      ],
      "names": [
        "Schema",
        "require",
        "PostSchema",
        "title",
        "type",
        "String",
        "unique",
        "slug",
        "description",
        "image",
        "body",
        "published",
        "Boolean",
        "default",
        "module",
        "export"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAE,UAAF,CAA1B;;AAEA,MAAMC,UAAU,GAAG,IAAIF,MAAJ,CAAW;AAE1BG,EAAAA,KAAK,EAAC;AAEFC,IAAAA,IAAI,EAAEC,MAFJ;AAGFC,IAAAA,MAAM,EAAE;AAHN,GAFoB;AAS1BC,EAAAA,IAAI,EAAC;AAEDH,IAAAA,IAAI,EAAEC,MAFL;AAGDC,IAAAA,MAAM,EAAE;AAHP,GATqB;AAgB1BE,EAAAA,WAAW,EAAEH,MAhBa;AAiB1BI,EAAAA,KAAK,EAAEJ,MAjBmB;AAkB1BK,EAAAA,IAAI,EAAEL,MAlBoB;AAmB1BM,EAAAA,SAAS,EAAE;AACPP,IAAAA,IAAI,EAAEQ,OADC;AAEPC,IAAAA,OAAO,EAAE;AAFF;AAnBe,CAAX,CAAnB;AA2BAC,MAAM,CAACC,MAAP,GAAgBb,UAAhB",
      "sourceRoot": "C:\\Users\\corps\\iimgit\\nodeiim\\src\\db\\migrations\\",
      "sourcesContent": [
        "const { Schema } = require ('mongoose');\r\n\r\nconst PostSchema = new Schema({\r\n\r\n    title:{\r\n\r\n        type: String,\r\n        unique: true,\r\n\r\n    } ,\r\n\r\n    slug:{\r\n\r\n        type: String,\r\n        unique: true,\r\n\r\n    } ,\r\n    \r\n    description: String,\r\n    image: String,\r\n    body: String,\r\n    published: {\r\n        type: Boolean,\r\n        default: true,\r\n    }\r\n\r\n\r\n})\r\n\r\nmodule.export = PostSchema;"
      ]
    },
    "sourceType": "module",
    "mtime": 1601450396124
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Arthur\\\\Documents\\\\teach\\\\nodeiim\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Arthur\\\\Documents\\\\teach\\\\nodeiim\",\"filename\":\"C:\\\\Users\\\\Arthur\\\\Documents\\\\teach\\\\nodeiim\\\\md-seed-config.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Arthur\\\\Documents\\\\teach\\\\nodeiim\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim",
      "filename": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\md-seed-config.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\md-seed-config.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\md-seed-config.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\",
        "sourceFileName": "md-seed-config.js"
      }
    },
    "ast": null,
    "code": "const mongoose = require('mongoose');\n\nconst PostSeeder = require('./src/db/seed/posts.seeder');\n\nconst mongoURL = 'mongodb://localhost/nodeiim';\n/**\r\n * Seeders List\r\n * order is important\r\n * @type {Object}\r\n */\n\nconst seedersList = {\n  PostSeeder\n};\n/**\r\n * Connect to mongodb implementation\r\n * @return {Promise}\r\n */\n\nconst connect = async () => await mongoose.connect(mongoURL, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n/**\r\n * Drop/Clear the database implementation\r\n * @return {Promise}\r\n */\n\n\nconst dropdb = async () => mongoose.connection.db.dropDatabase();\n\nmodule.exports = {\n  seedersList,\n  connect,\n  dropdb\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1kLXNlZWQtY29uZmlnLmpzIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIlBvc3RTZWVkZXIiLCJtb25nb1VSTCIsInNlZWRlcnNMaXN0IiwiY29ubmVjdCIsInVzZU5ld1VybFBhcnNlciIsInVzZVVuaWZpZWRUb3BvbG9neSIsImRyb3BkYiIsImNvbm5lY3Rpb24iLCJkYiIsImRyb3BEYXRhYmFzZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsR0FBR0MsT0FBTyxDQUFDLFVBQUQsQ0FBeEI7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHRCxPQUFPLENBQUMsNEJBQUQsQ0FBMUI7O0FBRUEsTUFBTUUsUUFBUSxHQUFHLDZCQUFqQjtBQUVBOzs7Ozs7QUFLQSxNQUFNQyxXQUFXLEdBQUc7QUFDaEJGLEVBQUFBO0FBRGdCLENBQXBCO0FBR0E7Ozs7O0FBSUEsTUFBTUcsT0FBTyxHQUFHLFlBQ2QsTUFBTUwsUUFBUSxDQUFDSyxPQUFULENBQWlCRixRQUFqQixFQUEyQjtBQUM3QkcsRUFBQUEsZUFBZSxFQUFFLElBRFk7QUFFN0JDLEVBQUFBLGtCQUFrQixFQUFFO0FBRlMsQ0FBM0IsQ0FEUjtBQUtBOzs7Ozs7QUFJQSxNQUFNQyxNQUFNLEdBQUcsWUFBWVIsUUFBUSxDQUFDUyxVQUFULENBQW9CQyxFQUFwQixDQUF1QkMsWUFBdkIsRUFBM0I7O0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiVCxFQUFBQSxXQURhO0FBRWJDLEVBQUFBLE9BRmE7QUFHYkcsRUFBQUE7QUFIYSxDQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFydGh1clxcRG9jdW1lbnRzXFx0ZWFjaFxcbm9kZWlpbVxcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbW9uZ29vc2UgPSByZXF1aXJlKCdtb25nb29zZScpO1xyXG5jb25zdCBQb3N0U2VlZGVyID0gcmVxdWlyZSgnLi9zcmMvZGIvc2VlZC9wb3N0cy5zZWVkZXInKTtcclxuXHJcbmNvbnN0IG1vbmdvVVJMID0gJ21vbmdvZGI6Ly9sb2NhbGhvc3Qvbm9kZWlpbSc7XHJcblxyXG4vKipcclxuICogU2VlZGVycyBMaXN0XHJcbiAqIG9yZGVyIGlzIGltcG9ydGFudFxyXG4gKiBAdHlwZSB7T2JqZWN0fVxyXG4gKi9cclxuY29uc3Qgc2VlZGVyc0xpc3QgPSB7XHJcbiAgICBQb3N0U2VlZGVyLFxyXG59O1xyXG4vKipcclxuICogQ29ubmVjdCB0byBtb25nb2RiIGltcGxlbWVudGF0aW9uXHJcbiAqIEByZXR1cm4ge1Byb21pc2V9XHJcbiAqL1xyXG5jb25zdCBjb25uZWN0ID0gYXN5bmMgKCkgPT5cclxuICBhd2FpdCBtb25nb29zZS5jb25uZWN0KG1vbmdvVVJMLCB7XHJcbiAgICAgIHVzZU5ld1VybFBhcnNlcjogdHJ1ZSxcclxuICAgICAgdXNlVW5pZmllZFRvcG9sb2d5OiB0cnVlXHJcbn0pO1xyXG4vKipcclxuICogRHJvcC9DbGVhciB0aGUgZGF0YWJhc2UgaW1wbGVtZW50YXRpb25cclxuICogQHJldHVybiB7UHJvbWlzZX1cclxuICovXHJcbmNvbnN0IGRyb3BkYiA9IGFzeW5jICgpID0+IG1vbmdvb3NlLmNvbm5lY3Rpb24uZGIuZHJvcERhdGFiYXNlKCk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IHtcclxuICAgIHNlZWRlcnNMaXN0LFxyXG4gICAgY29ubmVjdCxcclxuICAgIGRyb3BkYlxyXG59Il19",
    "map": {
      "version": 3,
      "sources": [
        "md-seed-config.js"
      ],
      "names": [
        "mongoose",
        "require",
        "PostSeeder",
        "mongoURL",
        "seedersList",
        "connect",
        "useNewUrlParser",
        "useUnifiedTopology",
        "dropdb",
        "connection",
        "db",
        "dropDatabase",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,4BAAD,CAA1B;;AAEA,MAAME,QAAQ,GAAG,6BAAjB;AAEA;;;;;;AAKA,MAAMC,WAAW,GAAG;AAChBF,EAAAA;AADgB,CAApB;AAGA;;;;;AAIA,MAAMG,OAAO,GAAG,YACd,MAAML,QAAQ,CAACK,OAAT,CAAiBF,QAAjB,EAA2B;AAC7BG,EAAAA,eAAe,EAAE,IADY;AAE7BC,EAAAA,kBAAkB,EAAE;AAFS,CAA3B,CADR;AAKA;;;;;;AAIA,MAAMC,MAAM,GAAG,YAAYR,QAAQ,CAACS,UAAT,CAAoBC,EAApB,CAAuBC,YAAvB,EAA3B;;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACbT,EAAAA,WADa;AAEbC,EAAAA,OAFa;AAGbG,EAAAA;AAHa,CAAjB",
      "sourceRoot": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\",
      "sourcesContent": [
        "const mongoose = require('mongoose');\r\nconst PostSeeder = require('./src/db/seed/posts.seeder');\r\n\r\nconst mongoURL = 'mongodb://localhost/nodeiim';\r\n\r\n/**\r\n * Seeders List\r\n * order is important\r\n * @type {Object}\r\n */\r\nconst seedersList = {\r\n    PostSeeder,\r\n};\r\n/**\r\n * Connect to mongodb implementation\r\n * @return {Promise}\r\n */\r\nconst connect = async () =>\r\n  await mongoose.connect(mongoURL, {\r\n      useNewUrlParser: true,\r\n      useUnifiedTopology: true\r\n});\r\n/**\r\n * Drop/Clear the database implementation\r\n * @return {Promise}\r\n */\r\nconst dropdb = async () => mongoose.connection.db.dropDatabase();\r\n\r\nmodule.exports = {\r\n    seedersList,\r\n    connect,\r\n    dropdb\r\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1601454716266
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Arthur\\\\Documents\\\\teach\\\\nodeiim\\\\src\\\\db\\\\seed\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Arthur\\\\Documents\\\\teach\\\\nodeiim\",\"filename\":\"C:\\\\Users\\\\Arthur\\\\Documents\\\\teach\\\\nodeiim\\\\src\\\\db\\\\seed\\\\posts.seeder.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Arthur\\\\Documents\\\\teach\\\\nodeiim\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\src\\db\\seed\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim",
      "filename": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\src\\db\\seed\\posts.seeder.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\src\\db\\seed\\posts.seeder.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\src\\db\\seed\\posts.seeder.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\src\\db\\seed\\",
        "sourceFileName": "posts.seeder.js"
      }
    },
    "ast": null,
    "code": "const {\n  Seeder\n} = require('mongoose-data-seed');\n\nconst faker = require('faker');\n\nconst slug = require('slug');\n\nconst Post = require('../models/postModel');\n\nconst data = [];\nlet title;\n\nfor (let i = 0; i < 10; i++) {\n  title = faker.lorem.words(3);\n  data.push({\n    title,\n    slug: slug(title),\n    description: faker.lorem.sentence(),\n    image: faker.image.imageUrl(),\n    body: faker.lorem.paragraphs(10, \"\\n\")\n  });\n}\n\nclass PostsSeeder extends Seeder {\n  async shouldRun() {\n    return Post.countDocuments().exec().then(count => count === 0);\n  }\n\n  async run() {\n    return Post.create(data);\n  }\n\n}\n\nmodule.exports = PostsSeeder;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3RzLnNlZWRlci5qcyJdLCJuYW1lcyI6WyJTZWVkZXIiLCJyZXF1aXJlIiwiZmFrZXIiLCJzbHVnIiwiUG9zdCIsImRhdGEiLCJ0aXRsZSIsImkiLCJsb3JlbSIsIndvcmRzIiwicHVzaCIsImRlc2NyaXB0aW9uIiwic2VudGVuY2UiLCJpbWFnZSIsImltYWdlVXJsIiwiYm9keSIsInBhcmFncmFwaHMiLCJQb3N0c1NlZWRlciIsInNob3VsZFJ1biIsImNvdW50RG9jdW1lbnRzIiwiZXhlYyIsInRoZW4iLCJjb3VudCIsInJ1biIsImNyZWF0ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFhQyxPQUFPLENBQUMsb0JBQUQsQ0FBMUI7O0FBQ0EsTUFBTUMsS0FBSyxHQUFHRCxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNRSxJQUFJLEdBQUdGLE9BQU8sQ0FBQyxNQUFELENBQXBCOztBQUNBLE1BQU1HLElBQUksR0FBR0gsT0FBTyxDQUFDLHFCQUFELENBQXBCOztBQUVBLE1BQU1JLElBQUksR0FBRyxFQUFiO0FBQ0EsSUFBSUMsS0FBSjs7QUFFQSxLQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUcsRUFBcEIsRUFBd0JBLENBQUMsRUFBekIsRUFBNkI7QUFDM0JELEVBQUFBLEtBQUssR0FBR0osS0FBSyxDQUFDTSxLQUFOLENBQVlDLEtBQVosQ0FBa0IsQ0FBbEIsQ0FBUjtBQUVBSixFQUFBQSxJQUFJLENBQUNLLElBQUwsQ0FBVTtBQUNSSixJQUFBQSxLQURRO0FBRVJILElBQUFBLElBQUksRUFBRUEsSUFBSSxDQUFDRyxLQUFELENBRkY7QUFHUkssSUFBQUEsV0FBVyxFQUFFVCxLQUFLLENBQUNNLEtBQU4sQ0FBWUksUUFBWixFQUhMO0FBSVJDLElBQUFBLEtBQUssRUFBRVgsS0FBSyxDQUFDVyxLQUFOLENBQVlDLFFBQVosRUFKQztBQUtSQyxJQUFBQSxJQUFJLEVBQUViLEtBQUssQ0FBQ00sS0FBTixDQUFZUSxVQUFaLENBQXVCLEVBQXZCLEVBQTJCLElBQTNCO0FBTEUsR0FBVjtBQU9EOztBQUVELE1BQU1DLFdBQU4sU0FBMEJqQixNQUExQixDQUFpQztBQUUvQixRQUFNa0IsU0FBTixHQUFrQjtBQUNoQixXQUFPZCxJQUFJLENBQUNlLGNBQUwsR0FBc0JDLElBQXRCLEdBQTZCQyxJQUE3QixDQUFrQ0MsS0FBSyxJQUFJQSxLQUFLLEtBQUssQ0FBckQsQ0FBUDtBQUNEOztBQUVELFFBQU1DLEdBQU4sR0FBWTtBQUNWLFdBQU9uQixJQUFJLENBQUNvQixNQUFMLENBQVluQixJQUFaLENBQVA7QUFDRDs7QUFSOEI7O0FBV2pDb0IsTUFBTSxDQUFDQyxPQUFQLEdBQWlCVCxXQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFydGh1clxcRG9jdW1lbnRzXFx0ZWFjaFxcbm9kZWlpbVxcc3JjXFxkYlxcc2VlZFxcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBTZWVkZXIgfSA9IHJlcXVpcmUoJ21vbmdvb3NlLWRhdGEtc2VlZCcpO1xyXG5jb25zdCBmYWtlciA9IHJlcXVpcmUoJ2Zha2VyJyk7XHJcbmNvbnN0IHNsdWcgPSByZXF1aXJlKCdzbHVnJyk7XHJcbmNvbnN0IFBvc3QgPSByZXF1aXJlKCcuLi9tb2RlbHMvcG9zdE1vZGVsJyk7XHJcblxyXG5jb25zdCBkYXRhID0gW107XHJcbmxldCB0aXRsZTtcclxuXHJcbmZvciAobGV0IGkgPSAwOyBpIDwgMTA7IGkrKykge1xyXG4gIHRpdGxlID0gZmFrZXIubG9yZW0ud29yZHMoMylcclxuXHJcbiAgZGF0YS5wdXNoKHtcclxuICAgIHRpdGxlLFxyXG4gICAgc2x1Zzogc2x1Zyh0aXRsZSksXHJcbiAgICBkZXNjcmlwdGlvbjogZmFrZXIubG9yZW0uc2VudGVuY2UoKSxcclxuICAgIGltYWdlOiBmYWtlci5pbWFnZS5pbWFnZVVybCgpLFxyXG4gICAgYm9keTogZmFrZXIubG9yZW0ucGFyYWdyYXBocygxMCwgXCJcXG5cIilcclxuICB9KVxyXG59XHJcblxyXG5jbGFzcyBQb3N0c1NlZWRlciBleHRlbmRzIFNlZWRlciB7XHJcblxyXG4gIGFzeW5jIHNob3VsZFJ1bigpIHtcclxuICAgIHJldHVybiBQb3N0LmNvdW50RG9jdW1lbnRzKCkuZXhlYygpLnRoZW4oY291bnQgPT4gY291bnQgPT09IDApO1xyXG4gIH1cclxuXHJcbiAgYXN5bmMgcnVuKCkge1xyXG4gICAgcmV0dXJuIFBvc3QuY3JlYXRlKGRhdGEpO1xyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBQb3N0c1NlZWRlcjtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "posts.seeder.js"
      ],
      "names": [
        "Seeder",
        "require",
        "faker",
        "slug",
        "Post",
        "data",
        "title",
        "i",
        "lorem",
        "words",
        "push",
        "description",
        "sentence",
        "image",
        "imageUrl",
        "body",
        "paragraphs",
        "PostsSeeder",
        "shouldRun",
        "countDocuments",
        "exec",
        "then",
        "count",
        "run",
        "create",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,oBAAD,CAA1B;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAArB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,IAAI,GAAGH,OAAO,CAAC,qBAAD,CAApB;;AAEA,MAAMI,IAAI,GAAG,EAAb;AACA,IAAIC,KAAJ;;AAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,EAAAA,KAAK,GAAGJ,KAAK,CAACM,KAAN,CAAYC,KAAZ,CAAkB,CAAlB,CAAR;AAEAJ,EAAAA,IAAI,CAACK,IAAL,CAAU;AACRJ,IAAAA,KADQ;AAERH,IAAAA,IAAI,EAAEA,IAAI,CAACG,KAAD,CAFF;AAGRK,IAAAA,WAAW,EAAET,KAAK,CAACM,KAAN,CAAYI,QAAZ,EAHL;AAIRC,IAAAA,KAAK,EAAEX,KAAK,CAACW,KAAN,CAAYC,QAAZ,EAJC;AAKRC,IAAAA,IAAI,EAAEb,KAAK,CAACM,KAAN,CAAYQ,UAAZ,CAAuB,EAAvB,EAA2B,IAA3B;AALE,GAAV;AAOD;;AAED,MAAMC,WAAN,SAA0BjB,MAA1B,CAAiC;AAE/B,QAAMkB,SAAN,GAAkB;AAChB,WAAOd,IAAI,CAACe,cAAL,GAAsBC,IAAtB,GAA6BC,IAA7B,CAAkCC,KAAK,IAAIA,KAAK,KAAK,CAArD,CAAP;AACD;;AAED,QAAMC,GAAN,GAAY;AACV,WAAOnB,IAAI,CAACoB,MAAL,CAAYnB,IAAZ,CAAP;AACD;;AAR8B;;AAWjCoB,MAAM,CAACC,OAAP,GAAiBT,WAAjB",
      "sourceRoot": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\src\\db\\seed\\",
      "sourcesContent": [
        "const { Seeder } = require('mongoose-data-seed');\r\nconst faker = require('faker');\r\nconst slug = require('slug');\r\nconst Post = require('../models/postModel');\r\n\r\nconst data = [];\r\nlet title;\r\n\r\nfor (let i = 0; i < 10; i++) {\r\n  title = faker.lorem.words(3)\r\n\r\n  data.push({\r\n    title,\r\n    slug: slug(title),\r\n    description: faker.lorem.sentence(),\r\n    image: faker.image.imageUrl(),\r\n    body: faker.lorem.paragraphs(10, \"\\n\")\r\n  })\r\n}\r\n\r\nclass PostsSeeder extends Seeder {\r\n\r\n  async shouldRun() {\r\n    return Post.countDocuments().exec().then(count => count === 0);\r\n  }\r\n\r\n  async run() {\r\n    return Post.create(data);\r\n  }\r\n}\r\n\r\nmodule.exports = PostsSeeder;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1601455116273
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Arthur\\\\Documents\\\\teach\\\\nodeiim\\\\src\\\\db\\\\models\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Arthur\\\\Documents\\\\teach\\\\nodeiim\",\"filename\":\"C:\\\\Users\\\\Arthur\\\\Documents\\\\teach\\\\nodeiim\\\\src\\\\db\\\\models\\\\postModel.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Arthur\\\\Documents\\\\teach\\\\nodeiim\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\src\\db\\models\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim",
      "filename": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\src\\db\\models\\postModel.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\src\\db\\models\\postModel.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\src\\db\\models\\postModel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\src\\db\\models\\",
        "sourceFileName": "postModel.js"
      }
    },
    "ast": null,
    "code": "const {\n  model\n} = require('mongoose');\n\nconst PostSchema = require('../migrations/postSchema');\n\nconst Post = model('Post', PostSchema);\nmodule.exports = Post;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3RNb2RlbC5qcyJdLCJuYW1lcyI6WyJtb2RlbCIsInJlcXVpcmUiLCJQb3N0U2NoZW1hIiwiUG9zdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFZQyxPQUFPLENBQUUsVUFBRixDQUF6Qjs7QUFDQSxNQUFNQyxVQUFVLEdBQUdELE9BQU8sQ0FBRSwwQkFBRixDQUExQjs7QUFFQSxNQUFNRSxJQUFJLEdBQUdILEtBQUssQ0FBQyxNQUFELEVBQVNFLFVBQVQsQ0FBbEI7QUFFQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCRixJQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXEFydGh1clxcRG9jdW1lbnRzXFx0ZWFjaFxcbm9kZWlpbVxcc3JjXFxkYlxcbW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IG1vZGVsIH0gPSByZXF1aXJlICgnbW9uZ29vc2UnKTtcclxuY29uc3QgUG9zdFNjaGVtYSA9IHJlcXVpcmUgKCcuLi9taWdyYXRpb25zL3Bvc3RTY2hlbWEnKTtcclxuXHJcbmNvbnN0IFBvc3QgPSBtb2RlbCgnUG9zdCcsIFBvc3RTY2hlbWEpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBQb3N0OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "postModel.js"
      ],
      "names": [
        "model",
        "require",
        "PostSchema",
        "Post",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAYC,OAAO,CAAE,UAAF,CAAzB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAE,0BAAF,CAA1B;;AAEA,MAAME,IAAI,GAAGH,KAAK,CAAC,MAAD,EAASE,UAAT,CAAlB;AAEAE,MAAM,CAACC,OAAP,GAAiBF,IAAjB",
      "sourceRoot": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\src\\db\\models\\",
      "sourcesContent": [
        "const { model } = require ('mongoose');\r\nconst PostSchema = require ('../migrations/postSchema');\r\n\r\nconst Post = model('Post', PostSchema);\r\n\r\nmodule.exports = Post;"
      ]
    },
    "sourceType": "module",
    "mtime": 1601455107753
  },
  "{\"sourceRoot\":\"C:\\\\Users\\\\Arthur\\\\Documents\\\\teach\\\\nodeiim\\\\src\\\\db\\\\migrations\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Arthur\\\\Documents\\\\teach\\\\nodeiim\",\"filename\":\"C:\\\\Users\\\\Arthur\\\\Documents\\\\teach\\\\nodeiim\\\\src\\\\db\\\\migrations\\\\postSchema.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\Arthur\\\\Documents\\\\teach\\\\nodeiim\",\"plugins\":[],\"presets\":[]}:7.11.6": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\src\\db\\migrations\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim",
      "filename": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\src\\db\\migrations\\postSchema.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\src\\db\\migrations\\postSchema.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\src\\db\\migrations\\postSchema.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\src\\db\\migrations\\",
        "sourceFileName": "postSchema.js"
      }
    },
    "ast": null,
    "code": "const {\n  Schema\n} = require('mongoose');\n\nconst PostSchema = new Schema({\n  title: {\n    type: String,\n    unique: true\n  },\n  slug: {\n    type: String,\n    unique: true\n  },\n  description: String,\n  image: String,\n  body: String,\n  published: {\n    type: Boolean,\n    default: true\n  }\n});\nmodule.exports = PostSchema;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBvc3RTY2hlbWEuanMiXSwibmFtZXMiOlsiU2NoZW1hIiwicmVxdWlyZSIsIlBvc3RTY2hlbWEiLCJ0aXRsZSIsInR5cGUiLCJTdHJpbmciLCJ1bmlxdWUiLCJzbHVnIiwiZGVzY3JpcHRpb24iLCJpbWFnZSIsImJvZHkiLCJwdWJsaXNoZWQiLCJCb29sZWFuIiwiZGVmYXVsdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFhQyxPQUFPLENBQUMsVUFBRCxDQUExQjs7QUFFQSxNQUFNQyxVQUFVLEdBQUcsSUFBSUYsTUFBSixDQUFXO0FBQzFCRyxFQUFBQSxLQUFLLEVBQUU7QUFDSEMsSUFBQUEsSUFBSSxFQUFFQyxNQURIO0FBRUhDLElBQUFBLE1BQU0sRUFBRTtBQUZMLEdBRG1CO0FBSzFCQyxFQUFBQSxJQUFJLEVBQUU7QUFDRkgsSUFBQUEsSUFBSSxFQUFFQyxNQURKO0FBRUZDLElBQUFBLE1BQU0sRUFBRTtBQUZOLEdBTG9CO0FBUzFCRSxFQUFBQSxXQUFXLEVBQUVILE1BVGE7QUFVMUJJLEVBQUFBLEtBQUssRUFBRUosTUFWbUI7QUFXMUJLLEVBQUFBLElBQUksRUFBRUwsTUFYb0I7QUFZMUJNLEVBQUFBLFNBQVMsRUFBRTtBQUNQUCxJQUFBQSxJQUFJLEVBQUVRLE9BREM7QUFFUEMsSUFBQUEsT0FBTyxFQUFFO0FBRkY7QUFaZSxDQUFYLENBQW5CO0FBa0JBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJiLFVBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQXJ0aHVyXFxEb2N1bWVudHNcXHRlYWNoXFxub2RlaWltXFxzcmNcXGRiXFxtaWdyYXRpb25zXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IFNjaGVtYSB9ID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcclxuXHJcbmNvbnN0IFBvc3RTY2hlbWEgPSBuZXcgU2NoZW1hKHtcclxuICAgIHRpdGxlOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgIHVuaXF1ZTogdHJ1ZSxcclxuICAgIH0sXHJcbiAgICBzbHVnOiB7XHJcbiAgICAgICAgdHlwZTogU3RyaW5nLFxyXG4gICAgICAgIHVuaXF1ZTogdHJ1ZSxcclxuICAgIH0sXHJcbiAgICBkZXNjcmlwdGlvbjogU3RyaW5nLFxyXG4gICAgaW1hZ2U6IFN0cmluZyxcclxuICAgIGJvZHk6IFN0cmluZyxcclxuICAgIHB1Ymxpc2hlZDoge1xyXG4gICAgICAgIHR5cGU6IEJvb2xlYW4sXHJcbiAgICAgICAgZGVmYXVsdDogdHJ1ZSxcclxuICAgIH1cclxufSlcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gUG9zdFNjaGVtYTtcclxuIl19",
    "map": {
      "version": 3,
      "sources": [
        "postSchema.js"
      ],
      "names": [
        "Schema",
        "require",
        "PostSchema",
        "title",
        "type",
        "String",
        "unique",
        "slug",
        "description",
        "image",
        "body",
        "published",
        "Boolean",
        "default",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,UAAD,CAA1B;;AAEA,MAAMC,UAAU,GAAG,IAAIF,MAAJ,CAAW;AAC1BG,EAAAA,KAAK,EAAE;AACHC,IAAAA,IAAI,EAAEC,MADH;AAEHC,IAAAA,MAAM,EAAE;AAFL,GADmB;AAK1BC,EAAAA,IAAI,EAAE;AACFH,IAAAA,IAAI,EAAEC,MADJ;AAEFC,IAAAA,MAAM,EAAE;AAFN,GALoB;AAS1BE,EAAAA,WAAW,EAAEH,MATa;AAU1BI,EAAAA,KAAK,EAAEJ,MAVmB;AAW1BK,EAAAA,IAAI,EAAEL,MAXoB;AAY1BM,EAAAA,SAAS,EAAE;AACPP,IAAAA,IAAI,EAAEQ,OADC;AAEPC,IAAAA,OAAO,EAAE;AAFF;AAZe,CAAX,CAAnB;AAkBAC,MAAM,CAACC,OAAP,GAAiBb,UAAjB",
      "sourceRoot": "C:\\Users\\Arthur\\Documents\\teach\\nodeiim\\src\\db\\migrations\\",
      "sourcesContent": [
        "const { Schema } = require('mongoose');\r\n\r\nconst PostSchema = new Schema({\r\n    title: {\r\n        type: String,\r\n        unique: true,\r\n    },\r\n    slug: {\r\n        type: String,\r\n        unique: true,\r\n    },\r\n    description: String,\r\n    image: String,\r\n    body: String,\r\n    published: {\r\n        type: Boolean,\r\n        default: true,\r\n    }\r\n})\r\n\r\nmodule.exports = PostSchema;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1601455107762
  }
}